{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack-auth-app\\\\client\\\\src\\\\routes\\\\utils\\\\authenticatedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport useUserStore from \"../../store/userStore.js\";\nimport ProtectedRoute from \"./protectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticatedRoute = () => {\n  _s();\n  const user = useUserStore(state => state.user);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  useEffect(() => {\n    if (user) setIsAuthorized(true);else setIsAuthorized(false);\n  }, [user]);\n  if (isAuthorized) return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n    isAuthorized: user === null || user === void 0 ? void 0 : user.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 28\n  }, this);\n  return null;\n};\n_s(AuthenticatedRoute, \"WGPOqWtnOJBkaKvWRIB/zgi7dnQ=\", false, function () {\n  return [useUserStore];\n});\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\nvar _c;\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"names":["React","useEffect","useState","useUserStore","ProtectedRoute","jsxDEV","_jsxDEV","AuthenticatedRoute","_s","user","state","isAuthorized","setIsAuthorized","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/fullstack-auth-app/client/src/routes/utils/authenticatedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport useUserStore from \"../../store/userStore.js\";\r\n\r\nimport ProtectedRoute from \"./protectedRoute\";\r\n\r\nconst AuthenticatedRoute = () => {\r\n  const user = useUserStore((state) => state.user);\r\n\r\n  const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) setIsAuthorized(true);\r\n    else setIsAuthorized(false);\r\n  }, [user]);\r\n\r\n  if (isAuthorized) return <ProtectedRoute isAuthorized={user?.id} />;\r\n\r\n  return null;\r\n};\r\n\r\nexport default AuthenticatedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,IAAI,GAAGN,YAAY,CAAEO,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAEhD,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAEG,eAAe,CAAC,IAAI,CAAC,CAAC,KAC3BA,eAAe,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,IAAIE,YAAY,EAAE,oBAAOL,OAAA,CAACF,cAAc;IAACO,YAAY,EAAEF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEnE,OAAO,IAAI;AACb,CAAC;AAACT,EAAA,CAbID,kBAAkB;EAAA,QACTJ,YAAY;AAAA;AAAAe,EAAA,GADrBX,kBAAkB;AAexB,eAAeA,kBAAkB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}