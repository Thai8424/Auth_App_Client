{"ast":null,"code":"import { create } from \"zustand\";\nimport authenticationAPI from \"../api/authenticationAPI.js\";\nimport { setAuthHeader } from \"../utils/helper.js\";\nconst useUserStore = create(set => ({\n  user: null,\n  signInAction: async data => {\n    try {\n      const response = await authenticationAPI.signIn(data.email, data.password);\n      if (!response || !response.data || !response.data.user) {\n        throw new Error('Invalid response format');\n      }\n      const {\n        user,\n        token\n      } = response.data;\n      console.log('User data:', user); // Log user data\n      console.log('Token:', token); // Log token\n\n      set({\n        user\n      }); // Update user state in store\n\n      localStorage.setItem(\"token\", token);\n      setAuthHeader(token);\n    } catch (error) {\n      console.error('Error during sign-in:', error);\n      throw error; // Re-throw error to handle it in the component\n    }\n  },\n  signOutAction: () => {\n    set({\n      user: null\n    });\n    localStorage.removeItem(\"token\");\n    setAuthHeader(null);\n  },\n  setUserAction: user => set({\n    user\n  })\n}));\nexport { useUserStore };","map":{"version":3,"names":["create","authenticationAPI","setAuthHeader","useUserStore","set","user","signInAction","data","response","signIn","email","password","Error","token","console","log","localStorage","setItem","error","signOutAction","removeItem","setUserAction"],"sources":["D:/fullstack-auth-app/client/src/store/userStore.js"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\nimport authenticationAPI from \"../api/authenticationAPI.js\";\r\nimport { setAuthHeader } from \"../utils/helper.js\";\r\n\r\nconst useUserStore = create((set) => ({\r\n  user: null,\r\n\r\n  signInAction: async (data) => {\r\n    try {\r\n      const response = await authenticationAPI.signIn(data.email, data.password);\r\n\r\n      if (!response || !response.data || !response.data.user) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n\r\n      const { user, token } = response.data;\r\n\r\n      console.log('User data:', user); // Log user data\r\n      console.log('Token:', token); // Log token\r\n\r\n      set({ user }); // Update user state in store\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      setAuthHeader(token);\r\n    } catch (error) {\r\n      console.error('Error during sign-in:', error);\r\n      throw error; // Re-throw error to handle it in the component\r\n    }\r\n  },\r\n\r\n  signOutAction: () => {\r\n    set({ user: null });\r\n\r\n    localStorage.removeItem(\"token\");\r\n    setAuthHeader(null);\r\n  },\r\n\r\n  setUserAction: (user) => set({ user }),\r\n}));\r\n\r\nexport { useUserStore };"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,OAAOC,iBAAiB,MAAM,6BAA6B;AAC3D,SAASC,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,YAAY,GAAGH,MAAM,CAAEI,GAAG,KAAM;EACpCC,IAAI,EAAE,IAAI;EAEVC,YAAY,EAAE,MAAOC,IAAI,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,iBAAiB,CAACQ,MAAM,CAACF,IAAI,CAACG,KAAK,EAAEH,IAAI,CAACI,QAAQ,CAAC;MAE1E,IAAI,CAACH,QAAQ,IAAI,CAACA,QAAQ,CAACD,IAAI,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACF,IAAI,EAAE;QACtD,MAAM,IAAIO,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAM;QAAEP,IAAI;QAAEQ;MAAM,CAAC,GAAGL,QAAQ,CAACD,IAAI;MAErCO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEV,IAAI,CAAC,CAAC,CAAC;MACjCS,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC,CAAC,CAAC;;MAE9BT,GAAG,CAAC;QAAEC;MAAK,CAAC,CAAC,CAAC,CAAC;;MAEfW,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCX,aAAa,CAACW,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAEDC,aAAa,EAAEA,CAAA,KAAM;IACnBf,GAAG,CAAC;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAEnBW,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChClB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAEDmB,aAAa,EAAGhB,IAAI,IAAKD,GAAG,CAAC;IAAEC;EAAK,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,SAASF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}